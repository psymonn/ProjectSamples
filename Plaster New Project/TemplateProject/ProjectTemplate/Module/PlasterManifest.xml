<?xml version="1.0" encoding="UTF-8"?>
<plasterManifest
        xmlns="http://www.microsoft.com/schemas/PowerShell/Plaster/v1" schemaVersion="1.0">
        <metadata>
                <name>ProjectModuleTemplate</name>
                <id>4216d992-c3f8-4f44-aa7d-00dfdb776434</id>
                <version>0.0.1</version>
                <title>Project Custom Module Template</title>
                <description>Plaster template to create a module</description>
                <author>Me myself and I</author>
                <tags></tags>
        </metadata>
        <parameters>
                <parameter name='ModuleAuthor' type = 'user-fullname' prompt='Author' />
                <parameter name='ModuleName' type = 'text' prompt='Name of your module' />
                <parameter name='ModuleVersion' type = 'text' prompt='Version Number' default='0.0.1' />
                <parameter name='ModuleDesc' type = 'text' prompt='Brief Description of your module' />
<!--
                <parameter name='FunctionFolders' type = 'multichoice' prompt='Please select folders to include' default='0,1'>
                        <choice label='&amp;0.Public' value='Public' help='Adds a public folder to module root'/>
                        <choice label='&amp;1.Private' value='Private' help='Adds a Private folder to module root'/>
                        <choice label='&amp;2.Plugins' value='Plugins' help='Adds a Plugins folder to module root'/>
                </parameter>
-->

<!--
                <parameter name='FunctionName' type = 'choice' prompt='Create new public Function' default='0'>
                        <choice label='&amp;Yes' value='Yes' help='Adds a new public Function'/>
                        <choice label='&amp;No' value='No' help='Does not add a new public Function'/>
                </parameter>

                <parameter name='FunctionName2' type = 'multichoice' prompt='Name of your Function' default='0,1,2,3'>
                        <choice label='&amp;Help' value='yes' help='Adds comment based help.'/>
                        <choice label='&amp;PipelineSupport' value='yes' help='Include Begin Process End blocks?'/>
                        <choice label='&amp;CmdletBinding' value='yes' help='Adds an empty cmdlet binding block.'/>
                        <choice label='&amp;ComputerName' value='yes' help='Add a paramater for computername'/>
                </parameter>
-->
                <parameter name="FunctionName" type="text" prompt="Name of your Function" />
                <parameter name="Help" type="choice" prompt="Include Comment Based Help?" default='0'>
                <choice label="&amp;Yes" help="Adds comment based help" value="Yes" />
                <choice label="&amp;No" help="Does not add comment based help" value="No" />
                </parameter>
                <parameter name="PipelineSupport" type="choice" prompt="Include Begin Process End blocks?" default='0'>
                <choice label="&amp;Yes" help="Adds pipeline support to the function" value="Yes" />
                <choice label="&amp;No" help="Does not add a pester folder" value="No" />
                </parameter>
                <parameter name="CmdletBinding" type="choice" prompt="Simple cmdlet binding or Advanced?" default='0'>
                <choice label="&amp;simple" help="Adds an empty cmdlet binding block" value="Simple" />
                <choice label="&amp;Advanced" help="Adds all options to cmdlet binding" value="Advanced" />
                </parameter>
                <!--Leave computername as default or else 'invoke-build test' will fail! -->
                <parameter name="ComputerName" type="choice" prompt="Add a paramater for computername" default='0'>
                <choice label="&amp;Yes" help="Adds a default parameter for computername" value="Yes" />
                <choice label="&amp;No" help="Does not include computername parameter" value="No" />
                </parameter>

                <parameter name='Sample' type = 'choice' prompt='Include Sample Project?' default='1'>
                        <choice label='&amp;Yes' value='Yes' help='Adds a sample folder'/>
                        <choice label='&amp;No' value='No' help='Does not add a sample folder'/>
                </parameter>

		<parameter name='VScode' type = 'choice' prompt='Include VScode' default='0'>
                        <choice label='&amp;Yes' value='Yes' help='Adds a VScode support'/>
                        <choice label='&amp;No' value='No' help='Does not add VScode support'/>
                </parameter>

        </parameters>
        <content>
                <message>Setting up your project</message>
                <newModuleManifest
                        destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psd1'
                        moduleVersion='$PLASTER_PARAM_ModuleVersion'
                        rootModule='${PLASTER_PARAM_ModuleName}.psm1'
                        author='$PLASTER_PARAM_ModuleAuthor'
                        description='$PLASTER_PARAM_ModuleDesc'/>
<!--
                <message condition='$PLASTER_PARAM_FunctionName -eq "Yes"'>Creating function template</message>
                <templateFile source='Function\functionTemplate.ps1' destination='${PLASTER_PARAM_ModuleName}\Public\${PLASTER_PARAM_FunctionName}.ps1' condition='$PLASTER_PARAM_FunctionName -eq "Yes"'/>
                <templateFile source='Function\testsTemplate.ps1' destination='${PLASTER_PARAM_ModuleName}\Public\${PLASTER_PARAM_FunctionName}.tests.ps1' condition='$PLASTER_PARAM_FunctionName -eq "Yes"'/>
-->
                <message>Creating function template</message>
                <templateFile source='Function\functionTemplate.ps1' destination='${PLASTER_PARAM_ModuleName}\Public\${PLASTER_PARAM_FunctionName}.ps1'/>
                <templateFile source='Function\testsTemplate.ps1' destination='.\Tests\${PLASTER_PARAM_FunctionName}.tests.ps1'/>
                <templateFile source='CallerPreference.ps1' destination='${PLASTER_PARAM_ModuleName}\Private\Get-CallerPreference.ps1'/>

                <message condition='$PLASTER_PARAM_Sample -eq "Yes"'>Setting up support for Sample Project</message>
                <templateFile source='Tests\**' destination='.\Tests' condition='$PLASTER_PARAM_Sample -eq "Yes"'/>
                <templateFile source='Private\**' destination='${PLASTER_PARAM_ModuleName}\Private' condition='$PLASTER_PARAM_Sample -eq "Yes"'/>
                <templateFile source='Public\**' destination='${PLASTER_PARAM_ModuleName}\Public' condition='$PLASTER_PARAM_Sample -eq "Yes"'/>
                <templateFile source='template.psm1' destination='${PLASTER_PARAM_ModuleName}\${PLASTER_PARAM_ModuleName}.psm1'/>

                <message>Creating you folders for module: </message>
                <file source='' destination='${PLASTER_PARAM_ModuleName}\Public\' />
                <file source='' destination='${PLASTER_PARAM_ModuleName}\Private\'/>

                <message>Setting up support for Pester</message>
                <requireModule name="Pester" minimumVersion="3.4.0"/>
                <file source='basicTest.ps1' destination='.\Tests\${PLASTER_PARAM_ModuleName}.tests.ps1'/>

                <message>Setting up support for Git</message>
                <templateFile source='README.md' destination='.\README.md'/>
                <file source='.gitignore' destination='.gitignore'/>
                <file source='LICENSE' destination='LICENSE'/>

                <message>Setting up support for Invoke-Build</message>
                <requireModule name="InvokeBuild"/>
                <templateFile source='default.build.ps1' destination='${PLASTER_PARAM_ModuleName}.build.ps1'/>
                <templateFile source='default.build.settings.ps1' destination='${PLASTER_PARAM_ModuleName}.build.settings.ps1'/>
                <templateFile source='build_utils.ps1' destination='.\build_utils.ps1'/>
                <templateFile source='build.ps1' destination='.\build.ps1'/>
                <templateFile source='Jenkinsfile' destination='.\Jenkinsfile'/>
                <file source='PSTestReport\**' destination='.\PSTestReport'/>
                <file source='' destination='.\artifacts\'/>

	        <message condition='$PLASTER_PARAM_VScode -eq "Yes"'>Setting up support for VScode</message>
                <file source='.vscode\**' destination='${PLASTER_PARAM_ModuleName}\.vscode' condition='$PLASTER_PARAM_VScode -eq "Yes"'/>

        </content>
</plasterManifest>
